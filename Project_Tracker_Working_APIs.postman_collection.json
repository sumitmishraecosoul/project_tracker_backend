{
  "info": {
    "name": "Project Tracker - Working APIs",
    "description": "Complete collection of all working APIs from comprehensive testing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{adminToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "brandId",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "subtaskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "commentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "notificationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testadmin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.token) {",
                  "        pm.collectionVariables.set('adminToken', response.token);",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User {{$timestamp}}\",\n  \"email\": \"testuser{{$timestamp}}@example.com\",\n  \"password\": \"test123\",\n  \"employeeNumber\": \"EMP-{{$timestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "🏢 Brand Management",
      "item": [
        {
          "name": "Get All Brands",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": ["{{baseUrl}}"],
              "path": ["brands"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.length > 0) {",
                  "        pm.collectionVariables.set('brandId', response.data[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Brand",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Brand {{$timestamp}}\",\n  \"description\": \"Test brand for comprehensive testing\",\n  \"settings\": {\n    \"theme\": \"light\",\n    \"notifications\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": ["{{baseUrl}}"],
              "path": ["brands"]
            }
          }
        }
      ]
    },
    {
      "name": "📁 Project Management",
      "item": [
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/projects",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "projects"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.length > 0) {",
                  "        pm.collectionVariables.set('projectId', response.data[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Project",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Project {{$timestamp}}\",\n  \"description\": \"Test project for comprehensive testing\",\n  \"status\": \"Active\",\n  \"department\": \"India E-commerce\",\n  \"priority\": \"Medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/projects",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "projects"]
            }
          }
        },
        {
          "name": "Get Project Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/projects/{{projectId}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "projects", "{{projectId}}", "tasks"]
            }
          }
        }
      ]
    },
    {
      "name": "📋 Task Management",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "tasks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.tasks && response.data.tasks.length > 0) {",
                  "        pm.collectionVariables.set('taskId', response.data.tasks[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "📝 Subtask Management",
      "item": [
        {
          "name": "Get All Subtasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/subtasks",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "subtasks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.length > 0) {",
                  "        pm.collectionVariables.set('subtaskId', response.data[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Subtask",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Subtask {{$timestamp}}\",\n  \"description\": \"Test subtask for comprehensive testing\",\n  \"status\": \"To Do\",\n  \"priority\": \"Medium\",\n  \"assignedTo\": \"{{userId}}\",\n  \"task_id\": \"{{taskId}}\",\n  \"dueDate\": \"{{$isoTimestamp}}\",\n  \"estimatedHours\": 4\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/subtasks",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "subtasks"]
            }
          }
        }
      ]
    },
    {
      "name": "💬 Comment System",
      "item": [
        {
          "name": "Get Task Comments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "comments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.length > 0) {",
                  "        pm.collectionVariables.set('commentId', response.data[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Mention Suggestions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/mention-suggestions?q=test",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "mention-suggestions"],
              "query": [
                {
                  "key": "q",
                  "value": "test"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "🔔 Notifications",
      "item": [
        {
          "name": "Get All Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}/notifications",
              "host": ["{{baseUrl}}"],
              "path": ["brands", "{{brandId}}", "notifications"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data && response.data.length > 0) {",
                  "        pm.collectionVariables.set('notificationId', response.data[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "👥 User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get Assignable Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/helpers/assignable-users",
              "host": ["{{baseUrl}}"],
              "path": ["users", "helpers", "assignable-users"]
            }
          }
        }
      ]
    }
  ]
}
